% $ biblatex auxiliary file $
% $ biblatex bbl format version 2.9 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{none/global//global/global}
    \entry{Karp2010}{misc}{}
      \name{author}{1}{}{%
        {{uniquename=0,uniquepart=base,hash=5d77d3cf25d2ee3ce64732bb77de0b0f}{%
           family={Karp},
           familyi={K\bibinitperiod},
           given={Richard\bibnamedelima M.},
           giveni={R\bibinitperiod\bibinitdelim M\bibinitperiod},
           givenun=0}}%
      }
      \strng{namehash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \strng{fullhash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \strng{bibnamehash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \strng{authorbibnamehash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \strng{authornamehash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \strng{authorfullhash}{5d77d3cf25d2ee3ce64732bb77de0b0f}
      \field{sortinit}{1}
      \field{sortinithash}{2174f786c6195e7fe2ee1c229b416e29}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Throughout the 1960s I worked on combinatorial optimization problems including logic circuit design with Paul Roth and assembly line balancing and the traveling salesman problem with Mike Held. These experiences made me aware that seemingly simple discrete optimization problems could hold the seeds of combinatorial explosions. The work of Dantzig, Fulkerson, Hoffman, Edmonds, Lawler and other pioneers on network flows, matching and matroids acquainted me with the elegant and efficient algorithms that were sometimes possible. Jack Edmonds' papers and a few key discussions with him drew my attention to the crucial distinction between polynomial-time and superpolynomial-time solvability. I was also influenced by Jack's emphasis on min-max theorems as a tool for fast verification of optimal solutions, which foreshadowed Steve Cook's definition of the complexity class NP. Another influence was George Dantzig's suggestion that integer programming could serve as a universal format for combinatorial optimization problems. {©} 2010 Springer-Verlag Berlin Heidelberg.}
      \field{booktitle}{50 Years of Integer Programming 1958-2008: From the Early Years to the State-of-the-Art}
      \field{isbn}{9783540682745}
      \field{title}{{Reducibility among combinatorial problems}}
      \field{year}{2010}
      \field{pages}{219\bibrangedash 241}
      \range{pages}{23}
      \verb{doi}
      \verb 10.1007/978-3-540-68279-0_8
      \endverb
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/karp.pdf:pdf
      \endverb
    \endentry
    \entry{Savitch1970}{article}{}
      \name{author}{1}{}{%
        {{uniquename=0,uniquepart=base,hash=b697a281190be17d2b794aab63ddd62c}{%
           family={Savitch},
           familyi={S\bibinitperiod},
           given={Walter\bibnamedelima J.},
           giveni={W\bibinitperiod\bibinitdelim J\bibinitperiod},
           givenun=0}}%
      }
      \strng{namehash}{b697a281190be17d2b794aab63ddd62c}
      \strng{fullhash}{b697a281190be17d2b794aab63ddd62c}
      \strng{bibnamehash}{b697a281190be17d2b794aab63ddd62c}
      \strng{authorbibnamehash}{b697a281190be17d2b794aab63ddd62c}
      \strng{authornamehash}{b697a281190be17d2b794aab63ddd62c}
      \strng{authorfullhash}{b697a281190be17d2b794aab63ddd62c}
      \field{sortinit}{2}
      \field{sortinithash}{cbff857e587bcb4635511624d773949e}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{The amount of storage needed to simulate a nondeterministic tape bounded Turingmachine on a deterministic Turing machine is investigated. Results include the following: Theorem. A nondeterministic L(n)-tape bounded Turing machine can be simulated by a deterministic [L(n)]2-tape bounded Turing machine, provided L(n)≥log2n. Computations of nondeterministic machines are shown to correspond to threadings of certain mazes. This correspondence is used to produce a specific set, namely the set of all codings of threadable mazes, such that, if there is any set which distinguishes nondeterministic tape complexity classes from deterministic tape complexity classes, then this is one such set. {©} 1970 Academic Press, Inc.}
      \field{issn}{10902724}
      \field{journaltitle}{Journal of Computer and System Sciences}
      \field{number}{2}
      \field{title}{{Relationships between nondeterministic and deterministic tape complexities}}
      \field{volume}{4}
      \field{year}{1970}
      \field{pages}{177\bibrangedash 192}
      \range{pages}{16}
      \verb{doi}
      \verb 10.1016/S0022-0000(70)80006-X
      \endverb
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/82306488.pdf:pdf
      \endverb
    \endentry
    \entry{Cook1971}{misc}{}
      \name{author}{1}{}{%
        {{uniquename=0,uniquepart=base,hash=bc00f87a27f34a10060fc126ca386235}{%
           family={Cook},
           familyi={C\bibinitperiod},
           given={Stephen\bibnamedelima A.},
           giveni={S\bibinitperiod\bibinitdelim A\bibinitperiod},
           givenun=0}}%
      }
      \strng{namehash}{bc00f87a27f34a10060fc126ca386235}
      \strng{fullhash}{bc00f87a27f34a10060fc126ca386235}
      \strng{bibnamehash}{bc00f87a27f34a10060fc126ca386235}
      \strng{authorbibnamehash}{bc00f87a27f34a10060fc126ca386235}
      \strng{authornamehash}{bc00f87a27f34a10060fc126ca386235}
      \strng{authorfullhash}{bc00f87a27f34a10060fc126ca386235}
      \field{sortinit}{3}
      \field{sortinithash}{a4b52e5432884761f50fb9571273b93e}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{It is shown that any recognition problem solved by a polynomial timebounded nondeterministic Turing machine can be "reduced" to the problem of determining whether a given propositional formula is a tautology. Here "reduced" means, roughly speaking, that the first problem can be solved deterministically in polynomial time provided an oracle is available for solving the second. From this notion of reducible, polynomial degrees of difficulty are defined, and it is shown that the problem of determining tautologyhood has the same polynomial degree as the problem of determining whether the first of two given graphs is isomorphic to a subgraph of the second. Other examples are discussed. A method of measuring the complexity of proof procedures for the predicate calculus is introduced and discussed. Throughout this paper, a set of strings means a set of strings on some fixed, large, finite alphabet Z. This alphabet is large enough to include symbols for all sets described here. All Turing machines are deterministic recognition devices, unless the contrary is explicitly stated.}
      \field{booktitle}{Proceedings of the Annual ACM Symposium on Theory of Computing}
      \field{issn}{07378017}
      \field{title}{{The complexity of theorem-proving procedures}}
      \field{year}{1971}
      \field{pages}{151\bibrangedash 158}
      \range{pages}{8}
      \verb{doi}
      \verb 10.1145/800157.805047
      \endverb
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/1971.pdf:pdf
      \endverb
    \endentry
    \entry{Cochran2011}{article}{}
      \name{author}{6}{}{%
        {{uniquename=0,uniquepart=base,hash=2564570825beb0cbbcef8ac3a9341c40}{%
           family={Cochran},
           familyi={C\bibinitperiod},
           given={James\bibnamedelima J.},
           giveni={J\bibinitperiod\bibinitdelim J\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=a5682faa40961a3e276d081e40551fcb}{%
           family={Cox},
           familyi={C\bibinitperiod},
           given={Louis\bibnamedelima A.},
           giveni={L\bibinitperiod\bibinitdelim A\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=9a82b37948b7312e22f9c62b6c621dbf}{%
           family={Keskinocak},
           familyi={K\bibinitperiod},
           given={Pinar},
           giveni={P\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=08cfe74affa7022f548b7cdd889ea880}{%
           family={Kharoufeh},
           familyi={K\bibinitperiod},
           given={Jeffrey\bibnamedelima P.},
           giveni={J\bibinitperiod\bibinitdelim P\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=e886cdb7c0450ea84818a4011c21d833}{%
           family={Smith},
           familyi={S\bibinitperiod},
           given={J.\bibnamedelimi Cole},
           giveni={J\bibinitperiod\bibinitdelim C\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=3cbb7cffd1dd7afb84cb61f03a48712e}{%
           family={Zabinsky},
           familyi={Z\bibinitperiod},
           given={Zelda\bibnamedelima B.},
           giveni={Z\bibinitperiod\bibinitdelim B\bibinitperiod},
           givenun=0}}%
      }
      \strng{namehash}{166d8f1e155d744c2ed37bd25a820cec}
      \strng{fullhash}{159cf3534d53f794c1464e7043cd228a}
      \strng{bibnamehash}{166d8f1e155d744c2ed37bd25a820cec}
      \strng{authorbibnamehash}{166d8f1e155d744c2ed37bd25a820cec}
      \strng{authornamehash}{166d8f1e155d744c2ed37bd25a820cec}
      \strng{authorfullhash}{159cf3534d53f794c1464e7043cd228a}
      \field{sortinit}{4}
      \field{sortinithash}{11cdaee3b18e01d77f3f428b13c1fc76}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Random search algorithms are useful for many ill-structured global optimization problems with continuous and/or discrete variables. Typically random search algo- rithms sacrifice a guarantee of optimality for finding a good solution quickly with convergence results in probability. Random search algorithms include simulated an- nealing, tabu search, genetic algorithms, evolutionary programming, particle swarm optimization, ant colony optimization, cross-entropy, stochastic approximation, multi- start and clustering algorithms, to name a few. They may be categorized as global (exploration) versus local (exploitation) search, or instance-based versus model-based. However, one feature these methods share is the use of probability in determining their iterative procedures. This article provides an overview of these random search algorithms, with a probabilistic view that ties them together.}
      \field{journaltitle}{Wiley Encyclopedia of Operations Research and Management Science}
      \field{title}{{Random Search Algorithms}}
      \field{year}{2011}
      \verb{doi}
      \verb 10.1002/9780470400531.eorms0704
      \endverb
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/AdapRandomSearch4.05.2009.pdf:pdf
      \endverb
    \endentry
    \entry{Jebari2013}{article}{}
      \name{author}{3}{}{%
        {{uniquename=0,uniquepart=base,hash=b332a337e20a48172d536ae35f86d20d}{%
           family={Jebari},
           familyi={J\bibinitperiod},
           given={Khalid},
           giveni={K\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=a4946c4013b8eff881a75884e65913fe}{%
           family={Mediafi},
           familyi={M\bibinitperiod},
           given={Mohammed},
           giveni={M\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=615ccf791e40f8d7a26b2f45d7be2719}{%
           family={Elmoujahid},
           familyi={E\bibinitperiod},
           given={Abdelaziz},
           giveni={A\bibinitperiod},
           givenun=0}}%
      }
      \strng{namehash}{d5b9cfbb66acd67ae951b113e47772f1}
      \strng{fullhash}{d5b9cfbb66acd67ae951b113e47772f1}
      \strng{bibnamehash}{d5b9cfbb66acd67ae951b113e47772f1}
      \strng{authorbibnamehash}{d5b9cfbb66acd67ae951b113e47772f1}
      \strng{authornamehash}{d5b9cfbb66acd67ae951b113e47772f1}
      \strng{authorfullhash}{d5b9cfbb66acd67ae951b113e47772f1}
      \field{sortinit}{5}
      \field{sortinithash}{3c19c3776b658b3558e9e2e4840c01e2}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{In this paper, an experimental study of six well known selection methods has conducted to a new technique of selection. Dynamic selection (DS), the proposed technique, exploits the advantages of each selection methods in terms of quality of solution and population diversity. Indeed, dynamic selection is based on two parameters that allow to decide the quality of candidate solutions and the genotypic diversity. The famous 0-1 Knapsack Problem is used to illustrate the efficiency of DS.}
      \field{journaltitle}{International Journal of Engineering Research {\&} Technology (IJERT)}
      \field{number}{11}
      \field{title}{{Parent Selection Operators for Genetic Algorithms}}
      \field{volume}{2}
      \field{year}{2013}
      \field{pages}{1141\bibrangedash 1145}
      \range{pages}{5}
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/V2I11-IJERTV2IS110523.pdf:pdf
      \endverb
    \endentry
    \entry{Jyotishree}{incollection}{}
      \name{author}{2}{}{%
        {{uniquename=0,uniquepart=base,hash=129edd56923c5f462604d5cd7b7320b0}{%
           family={Jyotishree},
           familyi={J\bibinitperiod},
           given={Jyotishree},
           giveni={J\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=a695c393b6815b89be7b12cb2c406814}{%
           family={Kumar},
           familyi={K\bibinitperiod},
           given={Rakesh},
           giveni={R\bibinitperiod},
           givenun=0}}%
      }
      \list{location}{1}{%
        {Kurukshetra}%
      }
      \list{organization}{1}{%
        {Kurukshetra University}%
      }
      \strng{namehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{fullhash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{bibnamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authorbibnamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authornamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authorfullhash}{24b5f75dfc11ba245283674eb4a0ed49}
      \field{sortinit}{6}
      \field{sortinithash}{57e57fb8451e7fcfa45d1e069f6d3136}
      \field{extradate}{1}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Selection is the first genetic operation in the reproductive phase of genetic algorithm. The objective of selection is to choose the fitter individuals in the population that will create offsprings for the next generation, commonly known as mating pool. The mating pool thus selected takes part in further genetic operations, advancing the population to the next generation and hopefully close to the optimal solution. In other words, Selection is the process of choosing breeding stock or parents from a population. As the generations pass, the members of population should get fitter and fitter. Individuals from the mating pool are used to generate new offsprings, with the resulting offspring forming the basis of next generation. So it is desirable that the mating pool should have good individuals. Selection operator works at the level of chromosomes. The key idea of selection operator is to give preference to better individuals by allowing them to pass on their genes to the next generation and prohibit the entrance of worst fit individuals into the next generation. The goodness of each individual depends on its fitness. Fitness value is determined by an objective function. Selection of individuals in the population is fitness dependent and is done using different algorithms [Goldberg et al. 1991]. Some are roulette wheel selection, rank selection, steady state selection and many more. Selection acts as driving force in a genetic algorithm by directing the genetic search towards promising regions in the search space. Selection operator emulates phenomena and processes in nature. Selection chooses more fit individuals in analogy to Darwin's theory of evolution-survival of fittest [Fogel 1995]. All the individuals have a chance of being selected into the mating pool, but there are chances that an individual in the population can be selected more than once depending upon its fitness. Selection schemes are characterised by selection pressure, selection variance and loss of diversity. They primarily determine the convergence characteristics of genetic algorithms. Selection has to be balanced. Too strong selection means suboptimal highly fit individuals will take over the population reducing the diversity and too weak selection will result in too slow evolution [Mitchell 1996].}
      \field{booktitle}{Knowledge based operation and problems representation in genetic algorithms}
      \field{title}{{Chapter 6: SELECTION 6.1 Introduction}}
      \field{year}{2012}
      \field{pages}{94\bibrangedash 124}
      \range{pages}{31}
      \verb{file}
      \verb :home/juan/Gen{\_}Algorithm{\_}TFG/recursos{\_}tfg/papers/16{\_}chapter 6.pdf:pdf
      \endverb
      \verb{urlraw}
      \verb http://shodhganga.inflibnet.ac.in/bitstream/10603/32680/16/16{\_}chapter 6.pdf
      \endverb
      \verb{url}
      \verb http://shodhganga.inflibnet.ac.in/bitstream/10603/32680/16/16%7B%5C_%7Dchapter%206.pdf
      \endverb
    \endentry
    \entry{Jyotishree2012a}{incollection}{}
      \name{author}{2}{}{%
        {{uniquename=0,uniquepart=base,hash=129edd56923c5f462604d5cd7b7320b0}{%
           family={Jyotishree},
           familyi={J\bibinitperiod},
           given={Jyotishree},
           giveni={J\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=a695c393b6815b89be7b12cb2c406814}{%
           family={Kumar},
           familyi={K\bibinitperiod},
           given={Rakesh},
           giveni={R\bibinitperiod},
           givenun=0}}%
      }
      \list{organization}{1}{%
        {Kurukshetra University}%
      }
      \strng{namehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{fullhash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{bibnamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authorbibnamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authornamehash}{24b5f75dfc11ba245283674eb4a0ed49}
      \strng{authorfullhash}{24b5f75dfc11ba245283674eb4a0ed49}
      \field{sortinit}{7}
      \field{sortinithash}{c818dd9105a2852444fc9f5e145c294e}
      \field{extradate}{2}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{A genetic algorithm operates on population of constant size. An initial population of individuals is generated randomly or heuristically. Selection operator is used to improve the quality of the population by selecting the fittest individuals to form the mating pool. Crossover operator takes two individuals with higher fitness values from the mating pool and randomly chooses the position and length of the portion to be exchanged and performs this operation at either single or multiple points. Mutation introduces new genetic structures in the population by randomly modifying some of the genes, helping the search algorithm to escape from local optimum by reaching new points in the search space. Current generation of individuals is replaced by newly generated offsprings by the specific replacement strategy. Genetic algorithms are stochastic iterative algorithms, so the algorithm iterates till maximum number of generations is reached or the cycle of genetic algorithm continues until the optimal solution is achieved. When a new generation of offsprings is produced, the next question is which of these newly generated offsprings would move forward to the next generation and would replace which chromosomes of the current generation. The answer to this question is based on Darwin's principle of "Survival of Fittest". So better fit individuals have more chances to survive and carried forward to next generation leaving behind the less fit ones. The process of forming next generation of individuals by replacing or removing some offsprings or parent individuals is done by replacement operator. This process in evolution is known as replacement scheme. Replacement strategy helps to find out the individuals that would replace the current generation to form next generation of population.}
      \field{booktitle}{Knowledge based operation and problems representation in genetic algorithms}
      \field{title}{{Chapter 7 : REPLACEMENT}}
      \field{year}{2012}
      \field{pages}{125\bibrangedash 135}
      \range{pages}{11}
      \verb{file}
      \verb :home/juan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - Unknown - Chapter 7 REPLACEMENT 7.1 Need of Replacement.pdf:pdf
      \endverb
    \endentry
    \entry{Bhattacharjee2017}{article}{}
      \name{author}{2}{}{%
        {{uniquename=0,uniquepart=base,hash=b37d336144141d63663bfe6ec604db7d}{%
           family={Bhattacharjee},
           familyi={B\bibinitperiod},
           given={Arunava},
           giveni={A\bibinitperiod},
           givenun=0}}%
        {{uniquename=0,uniquepart=base,hash=52a44fe25e584b79c7165d59c0190dba}{%
           family={Chauhan},
           familyi={C\bibinitperiod},
           given={Prabal},
           giveni={P\bibinitperiod},
           givenun=0}}%
      }
      \list{publisher}{1}{%
        {ASTES Publishers}%
      }
      \strng{namehash}{687315762a20a7bb78bb1e88b2f4a686}
      \strng{fullhash}{687315762a20a7bb78bb1e88b2f4a686}
      \strng{bibnamehash}{687315762a20a7bb78bb1e88b2f4a686}
      \strng{authorbibnamehash}{687315762a20a7bb78bb1e88b2f4a686}
      \strng{authornamehash}{687315762a20a7bb78bb1e88b2f4a686}
      \strng{authorfullhash}{687315762a20a7bb78bb1e88b2f4a686}
      \field{sortinit}{8}
      \field{sortinithash}{07edf88d4ea82509b9c4b4d13f41c452}
      \field{extradatescope}{labelyear}
      \field{labeldatesource}{year}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{In this paper we propose our genetic algorithm for solving the SAT problem. We introduce various crossover and mutation techniques and then make a comparative analysis between them in order to find out which techniques are the best suited for solving a SAT instance. Before the genetic algorithm is applied to an instance it is better to seek for unit and pure literals in the given formula and then try to eradicate them. This can considerably reduce the search space, and to demonstrate this we tested our algorithm on some random SAT instances. However, to analyse the various crossover and mutation techniques and also to evaluate the optimality of our algorithm we performed extensive experiments on benchmark instances of the SAT problem. We also estimated the ideal crossover length that would maximise the chances to solve a given SAT instance.}
      \field{issn}{24156698}
      \field{journaltitle}{Advances in Science, Technology and Engineering Systems}
      \field{number}{4}
      \field{title}{{Solving the SAT problem using genetic algorithm}}
      \field{volume}{2}
      \field{year}{2017}
      \field{pages}{115\bibrangedash 120}
      \range{pages}{6}
      \verb{doi}
      \verb 10.25046/aj020416
      \endverb
      \verb{file}
      \verb :home/juan/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Bhattacharjee, Chauhan - 2017 - Solving the SAT problem using genetic algorithm.pdf:pdf
      \endverb
      \keyw{CNF,Crossover,Elitism,Genetic Algorithm,Mutation,SAT}
    \endentry
  \enddatalist
\endrefsection
\endinput

